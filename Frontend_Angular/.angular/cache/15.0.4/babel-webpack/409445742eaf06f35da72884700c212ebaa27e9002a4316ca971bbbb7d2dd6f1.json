{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(http) {\n    this.http = http;\n    this.url = \"http://localhost:9595\";\n  }\n  generateToken(credentials) {\n    return this.http.post(`${this.url}/token`, credentials);\n  }\n  loginUser(token) {\n    localStorage.setItem('token', token);\n    return true;\n  }\n  isLoggedIn() {\n    let token = localStorage.getItem('token');\n    if (token == undefined || token === '' || token == null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  logout() {\n    localStorage.removeItem('token');\n    return true;\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  changePassword(admin) {\n    return this.http.put(`${this.url}/changePassword`, admin);\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,YAAY;EAIvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,QAAG,GAAG,uBAAuB;EAEW;EAExCC,aAAa,CAACC,WAAgB;IAC5B,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,GAAG,QAAQ,EAAEF,WAAW,CAAC;EACzD;EAEAG,SAAS,CAACC,KAAU;IAClBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;IACpC,OAAO,IAAI;EACb;EAEAG,UAAU;IACR,IAAIH,KAAK,GAAGC,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;IACzC,IAAIJ,KAAK,IAAIK,SAAS,IAAIL,KAAK,KAAK,EAAE,IAAIA,KAAK,IAAI,IAAI,EAAE;MACvD,OAAO,KAAK;KACb,MAAM;MACL,OAAO,IAAI;;EAEf;EAEAM,MAAM;IACJL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;IAChC,OAAO,IAAI;EACb;EAEAC,QAAQ;IACN,OAAOP,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;EACtC;EAEAK,cAAc,CAACC,KAAY;IACzB,OAAO,IAAI,CAAChB,IAAI,CAACiB,GAAG,CAAS,GAAG,IAAI,CAACb,GAAG,iBAAiB,EAAEY,KAAK,CAAC;EACnE;;AAnCWlB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAoB,SAAZpB,YAAY;EAAAqB,YAFX;AAAM","names":["LoginService","constructor","http","generateToken","credentials","post","url","loginUser","token","localStorage","setItem","isLoggedIn","getItem","undefined","logout","removeItem","getToken","changePassword","admin","put","factory","providedIn"],"sourceRoot":"","sources":["D:\\Web\\Phase4_Project_Kitchen_Story-master\\Frontend_Angular\\src\\app\\Services\\login.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Admin } from '../Components/changepassword/admin';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  url = \"http://localhost:9595\"\n\n  constructor(private http: HttpClient) { }\n\n  generateToken(credentials: any) {\n    return this.http.post(`${this.url}/token`, credentials)\n  }\n\n  loginUser(token: any) {\n    localStorage.setItem('token', token);\n    return true;\n  }\n\n  isLoggedIn() {\n    let token = localStorage.getItem('token');\n    if (token == undefined || token === '' || token == null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    return true;\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  changePassword(admin: Admin): Observable<Object> {\n    return this.http.put<Object>(`${this.url}/changePassword`, admin);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}