{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./login.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(loginService, router) {\n    this.loginService = loginService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (this.loginService.isLoggedIn()) {\n      return true;\n    }\n    this.router.navigate(['login']);\n    return false;\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.LoginService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,YAA0B,EAAUC,MAAc;IAAlD,iBAAY,GAAZD,YAAY;IAAwB,WAAM,GAANC,MAAM;EAAY;EAC1EC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAC1B,IAAI,IAAI,CAACJ,YAAY,CAACK,UAAU,EAAE,EAAE;MAClC,OAAO,IAAI;;IAEb,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAE/B,OAAO,KAAK;EACd;;AAXWR,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAS,SAATT,SAAS;EAAAU,YAFR;AAAM","names":["AuthGuard","constructor","loginService","router","canActivate","route","state","isLoggedIn","navigate","factory","providedIn"],"sourceRoot":"","sources":["D:\\web\\Phase4_Project_Kitchen_Story-master\\Frontend_Angular\\src\\app\\Services\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private loginService: LoginService, private router: Router) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.loginService.isLoggedIn()) {\n      return true;\n    }\n    this.router.navigate(['login'])\n\n    return false;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}